#!/usr/bin/env node

var path = require('path');
var rewire = require('../src').rewire;
var pkg = require('pkg-dir');
var yargs = require('yargs')
  .usage('No worries TypeScript declaration manager (https://github.com/shyiko/tsdm)' +
    '\n\nUsage: tsdm')
  .command('rewire', 'Rewire type definition providers ' +
    '(should be called after `npm install`) (aliases: r)')
  .help('h').alias('h', 'help')
  .version(function () { return require('../package').version; })
  .strict();

pkg(process.cwd())
  .then(function (root) {
    var command = process.argv[2];
    switch (command) {
      case 'r':
      case 'rewire':
        rewire({path: root})
          .on('wired', function (e) {
            switch (e.type) {
              case 'ambient':
                console.log('Linked ' +
                  path.relative(process.cwd(), e.pkg._where));
                break;
              case 'scoped':
                console.log('Updated ' +
                  path.relative(process.cwd(), e.file));
                break;
              default:
                throw new Error();
            }
          })
          .on('warn', function (e) {
            console.warn('WARN: ' + e);
          })
          .on('error', function (err) {
            console.error(err.stack);
            process.exit(4);
          });
        break;
      default:
        yargs.showHelp();
        if (command) {
          console.error('Unknown command `' + command + '`.');
        }
        process.exit(3);
    }
  });
